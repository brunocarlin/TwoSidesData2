<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tidymodels on TwoSidesData</title>
    <link>/tags/tidymodels/</link>
    <description>Recent content in tidymodels on TwoSidesData</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Aug 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/tidymodels/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Classification - KNN</title>
      <link>/2019/08/15/classification-knn/</link>
      <pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/15/classification-knn/</guid>
      <description>


&lt;p&gt;Breast Cancer problem.&lt;/p&gt;
&lt;div id=&#34;setting-up-rmarkdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Setting up Rmarkdown&lt;/h1&gt;
&lt;p&gt;root.dir =&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;loading-librais&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Loading Librais&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages ---------------------------------- tidyverse 1.2.1 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.2.1     v purrr   0.3.2
## v tibble  2.1.3     v dplyr   0.8.3
## v tidyr   0.8.3     v stringr 1.4.0
## v readr   1.3.1     v forcats 0.4.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------- tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Registered S3 method overwritten by &amp;#39;xts&amp;#39;:
##   method     from
##   as.zoo.xts zoo&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------- tidymodels 0.0.2 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v broom     0.5.2       v recipes   0.1.6  
## v dials     0.0.2       v rsample   0.0.5  
## v infer     0.4.0.1     v yardstick 0.0.3  
## v parsnip   0.0.3.1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------ tidymodels_conflicts() --
## x scales::discard() masks purrr::discard()
## x dplyr::filter()   masks stats::filter()
## x recipes::fixed()  masks stringr::fixed()
## x dplyr::lag()      masks stats::lag()
## x yardstick::spec() masks readr::spec()
## x recipes::step()   masks stats::step()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;janitor&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     chisq.test, fisher.test&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;skimr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:knitr&amp;#39;:
## 
##     kable&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter&lt;/code&gt;&lt;/pre&gt;
<<<<<<< HEAD
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(DataExplorer)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Loading Libraries: 4.87 sec elapsed&lt;/p&gt;
=======
&lt;p&gt;Loading Libraries: 4.73 sec elapsed&lt;/p&gt;
>>>>>>> parent of 75e2935... Testing pull strategy
&lt;/div&gt;
&lt;div id=&#34;getting-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Getting Data&lt;/h1&gt;
&lt;p&gt;Got the dataset with headers on &lt;a href=&#34;https://www.kaggle.com/uciml/breast-cancer-wisconsin-data/version/2&#34;&gt;kaggle link&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Missing column names filled in: &amp;#39;X33&amp;#39; [33]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   .default = col_double(),
##   diagnosis = col_character(),
##   X33 = col_character()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## See spec(...) for full column specifications.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: 569 parsing failures.
## row col   expected     actual                file
##   1  -- 33 columns 32 columns &amp;#39;breast_cancer.csv&amp;#39;
##   2  -- 33 columns 32 columns &amp;#39;breast_cancer.csv&amp;#39;
##   3  -- 33 columns 32 columns &amp;#39;breast_cancer.csv&amp;#39;
##   4  -- 33 columns 32 columns &amp;#39;breast_cancer.csv&amp;#39;
##   5  -- 33 columns 32 columns &amp;#39;breast_cancer.csv&amp;#39;
## ... ... .......... .......... ...................
## See problems(...) for more details.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Set Chunk: 0.24 sec elapsed&lt;/p&gt;
&lt;p&gt;There is a strange extra column named X33 dealing with that using janitor package&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Warning: &amp;#39;janitor::remove_empty_cols&amp;#39; Ã© obsoleto.
## Use &amp;#39;remove_empty(&amp;quot;cols&amp;quot;)&amp;#39; em seu lugar
## Veja help(&amp;quot;Deprecated&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cleaning Data: 0.02 sec elapsed&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;visualizing-the-data-using-dataexplorer-and-skimr&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Visualizing the data using DataExplorer and Skimr&lt;/h1&gt;
&lt;div id=&#34;skimr-is-a-fast-way-to-get-info-on-your-data-even-though-the-hist-plot-fails-on-my-blog&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Skimr is a fast way to get info on your data even though the hist plot fails on my blog :(&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Skim summary statistics  
##  n obs: 569    
##  n variables: 32    
## 
## Variable type: character
## 
##  variable     missing    complete     n     min    max    empty    n_unique 
## -----------  ---------  ----------  -----  -----  -----  -------  ----------
##  diagnosis       0         569       569     1      1       0         2     
## 
## Variable type: numeric
## 
##         variable            missing    complete     n      mean       sd         p0        p25       p50        p75       p100        hist   
## -------------------------  ---------  ----------  -----  --------  ---------  ---------  --------  --------  ---------  ---------  ----------
##         area_mean              0         569       569    654.89    351.91      143.5     420.3     551.1      782.7      2501      &amp;lt;U+2585&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##          area_se               0         569       569    40.34      45.49       6.8      17.85     24.53      45.19      542.2     &amp;lt;U+2587&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##        area_worst              0         569       569    880.58    569.36      185.2     515.3     686.5      1084       4254      &amp;lt;U+2587&amp;gt;&amp;lt;U+2585&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##     compactness_mean           0         569       569     0.1       0.053      0.019     0.065     0.093      0.13       0.35      &amp;lt;U+2585&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##      compactness_se            0         569       569    0.025      0.018     0.0023     0.013      0.02      0.032      0.14      &amp;lt;U+2587&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##     compactness_worst          0         569       569     0.25      0.16       0.027      0.15      0.21      0.34       1.06      &amp;lt;U+2586&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2585&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##    concave points_mean         0         569       569    0.049      0.039        0        0.02     0.034      0.074       0.2      &amp;lt;U+2587&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##     concave points_se          0         569       569    0.012     0.0062        0       0.0076    0.011      0.015      0.053     &amp;lt;U+2583&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2585&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##   concave points_worst         0         569       569     0.11      0.066        0       0.065      0.1       0.16       0.29      &amp;lt;U+2583&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2585&amp;gt;&amp;lt;U+2585&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt; 
##      concavity_mean            0         569       569    0.089      0.08         0        0.03     0.062      0.13       0.43      &amp;lt;U+2587&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##       concavity_se             0         569       569    0.032      0.03         0       0.015     0.026      0.042       0.4      &amp;lt;U+2587&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##      concavity_worst           0         569       569     0.27      0.21         0        0.11      0.23      0.38       1.25      &amp;lt;U+2587&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2585&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##  fractal_dimension_mean        0         569       569    0.063     0.0071      0.05      0.058     0.062      0.066      0.097     &amp;lt;U+2583&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##   fractal_dimension_se         0         569       569    0.0038    0.0026     0.00089    0.0022    0.0032    0.0046      0.03      &amp;lt;U+2587&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##  fractal_dimension_worst       0         569       569    0.084      0.018      0.055     0.071      0.08      0.092      0.21      &amp;lt;U+2586&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##            id                  0         569       569    3e+07     1.3e+08     8670      869218    906024    8813129    9.1e+08    &amp;lt;U+2587&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##      perimeter_mean            0         569       569    91.97      24.3       43.79     75.17     86.24      104.1      188.5     &amp;lt;U+2582&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##       perimeter_se             0         569       569     2.87      2.02       0.76       1.61      2.29      3.36       21.98     &amp;lt;U+2587&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##      perimeter_worst           0         569       569    107.26     33.6       50.41     84.11     97.66      125.4      251.2     &amp;lt;U+2582&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##        radius_mean             0         569       569    14.13      3.52       6.98       11.7     13.37      15.78      28.11     &amp;lt;U+2581&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##         radius_se              0         569       569     0.41      0.28       0.11       0.23      0.32      0.48       2.87      &amp;lt;U+2587&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##       radius_worst             0         569       569    16.27      4.83       7.93      13.01     14.97      18.79      36.04     &amp;lt;U+2582&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2585&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##      smoothness_mean           0         569       569    0.096      0.014      0.053     0.086     0.096      0.11       0.16      &amp;lt;U+2581&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##       smoothness_se            0         569       569    0.007      0.003     0.0017     0.0052    0.0064    0.0081      0.031     &amp;lt;U+2585&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##     smoothness_worst           0         569       569     0.13      0.023      0.071      0.12      0.13      0.15       0.22      &amp;lt;U+2581&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##       symmetry_mean            0         569       569     0.18      0.027      0.11       0.16      0.18       0.2        0.3      &amp;lt;U+2581&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##        symmetry_se             0         569       569    0.021     0.0083     0.0079     0.015     0.019      0.023      0.079     &amp;lt;U+2587&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##      symmetry_worst            0         569       569     0.29      0.062      0.16       0.25      0.28      0.32       0.66      &amp;lt;U+2581&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##       texture_mean             0         569       569    19.29       4.3       9.71      16.17     18.84      21.8       39.28     &amp;lt;U+2582&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2585&amp;gt;&amp;lt;U+2582&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##        texture_se              0         569       569     1.22      0.55       0.36       0.83      1.11      1.47       4.88      &amp;lt;U+2586&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2583&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt; 
##       texture_worst            0         569       569    25.68      6.15       12.02     21.08     25.41      29.72      49.54     &amp;lt;U+2582&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2587&amp;gt;&amp;lt;U+2586&amp;gt;&amp;lt;U+2585&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&amp;lt;U+2581&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Skimr: 0.3 sec elapsed&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data-explorer&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Explorer&lt;/h2&gt;
&lt;p&gt;Is a imho a prettier option with individual cool plots and a super powerfull(but slow) report creation tool when working outside of an Rmarkdownm document&lt;/p&gt;
<<<<<<< HEAD
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% 
  DataExplorer::plot_intro()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019/08/15/index_files/figure-html/Data%20Explorer%20%20individual%20plots-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% 
  DataExplorer::plot_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019/08/15/index_files/figure-html/Data%20Explorer%20%20individual%20plots-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% 
  DataExplorer::plot_correlation()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019/08/15/index_files/figure-html/Data%20Explorer%20%20individual%20plots-3.png&#34; width=&#34;672&#34; /&gt;Data Explorer individual plots: 1.34 sec elapsed&lt;/p&gt;
=======
&lt;p&gt;&lt;img src=&#34;/post/2019/08/15/index_files/figure-html/Data%20Explorer%20%20individual%20plots-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/2019/08/15/index_files/figure-html/Data%20Explorer%20%20individual%20plots-2.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/2019/08/15/index_files/figure-html/Data%20Explorer%20%20individual%20plots-3.png&#34; width=&#34;672&#34; /&gt;Data Explorer individual plots: 1.3 sec elapsed&lt;/p&gt;
>>>>>>> parent of 75e2935... Testing pull strategy
&lt;p&gt;There are much more amaziong tools such as the &lt;a href=&#34;https://www.data-imaginist.com/2019/a-flurry-of-facets/&#34;&gt;ggforce package&lt;/a&gt; , but I hope you get the gist of the exploration stage.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;modeling&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Modeling&lt;/h1&gt;
&lt;p&gt;For now I am going to focus on the tools provided by the tidymodels packages and the KNN, in the future I may come back to add more models and probably to play around the DALEX package a little bit.&lt;/p&gt;
&lt;p&gt;Just to remember M is Malignant and B is Benign, we are trying to correcly classify our patients, I am going to ignore the id Varible since it should not be reliaded upon to generate predictions(Even though it may capture some interesting effects such as better screening for patients on the latter idâs).&lt;/p&gt;
&lt;div id=&#34;train-test-split&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Train Test Split&lt;/h2&gt;
&lt;p&gt;Usually we split our data into training and test data to ensure a fair evaluation of the models or parameters being tested(hoping to avoid overfitting).&lt;/p&gt;
&lt;p&gt;The workflow for the tidymodels is that we first split our data.&lt;/p&gt;
&lt;p&gt;unnamed-chunk-1: 0 sec elapsed&lt;/p&gt;
&lt;p&gt;Then we model on our Training Data&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;recipes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Recipes&lt;/h2&gt;
&lt;p&gt;Recipes are used to preprocess our data, the main mistake here is using the whole data set.&lt;/p&gt;
&lt;p&gt;The recipe package helps us with this process.&lt;/p&gt;
&lt;p&gt;For those not familearized with the formula notation I am fitting the model on all variables except the id variable.&lt;/p&gt;
&lt;p&gt;I am than Normalizing my data since the KNN alghoritm is sensible to the scale of the variables being used, I am also excluding variables with high absolute correlation amongst themselves.&lt;/p&gt;
&lt;p&gt;Recipes are easy to read and can be quite complex for example I could scale all predictor that are numeric on&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##       role #variables
##    outcome          1
##  predictor         31
## 
## Operations:
## 
<<<<<<< HEAD
## Centering for id, radius_mean, ... [trained]
## Scaling for id, radius_mean, ... [trained]
## Correlation filter removed perimeter_mean, ... [trained]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;unnamed-chunk-2: 0.08 sec elapsed&lt;/p&gt;
&lt;p&gt;We can then create our train and test data frames by baking our recipe and juicing our recipe&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_testing &amp;lt;- df_recipe %&amp;gt;% 
  bake(testing(df_split))
df_testing&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 113 x 22
##        id diagnosis radius_mean texture_mean smoothness_mean
##     &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;           &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt;
##  1 -0.234 M               1.11        -2.13          1.57   
##  2 -0.234 M               1.84        -0.370        -0.808  
##  3 -0.234 M              -0.308        0.596         2.20   
##  4  0.427 M               0.480       -0.341         0.0652 
##  5 -0.234 M               0.500        1.10         -0.860  
##  6 -0.234 M               0.168        0.193         0.176  
##  7 -0.174 B              -1.30        -1.64          0.440  
##  8 -0.234 M               0.866       -0.696         1.58   
##  9 -0.234 M               0.753        0.541        -0.00541
## 10 -0.234 B              -0.300       -0.215        -0.448  
## # ... with 103 more rows, and 17 more variables: compactness_mean &amp;lt;dbl&amp;gt;,
## #   symmetry_mean &amp;lt;dbl&amp;gt;, fractal_dimension_mean &amp;lt;dbl&amp;gt;, texture_se &amp;lt;dbl&amp;gt;,
## #   area_se &amp;lt;dbl&amp;gt;, smoothness_se &amp;lt;dbl&amp;gt;, compactness_se &amp;lt;dbl&amp;gt;,
## #   concavity_se &amp;lt;dbl&amp;gt;, `concave points_se` &amp;lt;dbl&amp;gt;, symmetry_se &amp;lt;dbl&amp;gt;,
## #   fractal_dimension_se &amp;lt;dbl&amp;gt;, smoothness_worst &amp;lt;dbl&amp;gt;,
## #   compactness_worst &amp;lt;dbl&amp;gt;, concavity_worst &amp;lt;dbl&amp;gt;, `concave
## #   points_worst` &amp;lt;dbl&amp;gt;, symmetry_worst &amp;lt;dbl&amp;gt;,
## #   fractal_dimension_worst &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;unnamed-chunk-3: 0.08 sec elapsed&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_training &amp;lt;- juice(df_recipe)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;unnamed-chunk-4: 0.01 sec elapsed&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;cross-validation-and-random-serch&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Cross Validation and Random Serch&lt;/h2&gt;
&lt;div id=&#34;cross-validation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Cross Validation&lt;/h3&gt;
&lt;p&gt;We further divide our data frame into folds in order to improve our certainty that the ideal number of neighbours is right.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_cross_testing &amp;lt;- df_testing %&amp;gt;% vfold_cv(v = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;unnamed-chunk-5: 0 sec elapsed&lt;/p&gt;
&lt;p&gt;To decide the KNN parameters we could use the Dials package, grid searchign neighbors 1 to 50, Working on this&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bst_grid &amp;lt;- grid_random(
  neighbors %&amp;gt;%  range_set(c( 1,  50)), 
  size = 10
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;unnamed-chunk-6: 0.01 sec elapsed&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nearest_neighbor_model &amp;lt;- parsnip::nearest_neighbor(mode = &amp;quot;classification&amp;quot;) %&amp;gt;% 
  set_engine(&amp;quot;kknn&amp;quot;) %&amp;gt;%
  merge(bst_grid)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;unnamed-chunk-7: 0.02 sec elapsed&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results_cross_validation &amp;lt;- crossing(df_cross_testing,nearest_neighbor_model) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;unnamed-chunk-8: 0.01 sec elapsed&lt;/p&gt;
&lt;/div&gt;
=======
## Centering for all_predictors
## Scaling for all_predictors, all_numeric
## Correlation filter on all_predictors&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;unnamed-chunk-2: 0.02 sec elapsed&lt;/p&gt;
>>>>>>> parent of 75e2935... Testing pull strategy
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
